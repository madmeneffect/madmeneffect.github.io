/*!
 * Lim9
 * Lim9
 * http://lim9.com
 * @author Lim9
 * @version 1.0.0
 * Copyright 2013. commercial licensed.
 */
/*!
 * jQuery-Browser-Language jQuery plugin v0.0.1
 *
 * Copyright 2010 by Dan Singerman <dansingerman@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

(function($){

   $.browserLanguage = function(callback){
     var language;
     $.ajax({
         url: "http://ajaxhttpheaders.appspot.com",
         dataType: 'jsonp',
         success: function(headers) {
             language = headers['Accept-Language'].substring(0,2);
             callback(languageLookup[language], headers['Accept-Language']);
         }
     });
   }

   /*
    Language list from http://en.wikipedia.org/wiki/ISO_639-1_language_matrix
   */

   var languageLookup = {
     "ab": "Abkhazian",
     "af": "Afrikaans",
     "an": "Aragonese",
     "ar": "Arabic",
     "as": "Assamese",
     "az": "Azerbaijani",
     "be": "Belarusian",
     "bg": "Bulgarian",
     "bn": "Bengali",
     "bo": "Tibetan",
     "br": "Breton",
     "bs": "Bosnian",
     "ca": "Catalan / Valencian",
     "ce": "Chechen",
     "co": "Corsican",
     "cs": "Czech",
     "cu": "Church Slavic",
     "cy": "Welsh",
     "da": "Danish",
     "de": "German",
     "el": "Greek",
     "en": "English",
     "eo": "Esperanto",
     "es": "Spanish / Castilian",
     "et": "Estonian",
     "eu": "Basque",
     "fa": "Persian",
     "fi": "Finnish",
     "fj": "Fijian",
     "fo": "Faroese",
     "fr": "French",
     "fy": "Western Frisian",
     "ga": "Irish",
     "gd": "Gaelic / Scottish Gaelic",
     "gl": "Galician",
     "gv": "Manx",
     "he": "Hebrew",
     "hi": "Hindi",
     "hr": "Croatian",
     "ht": "Haitian; Haitian Creole",
     "hu": "Hungarian",
     "hy": "Armenian",
     "id": "Indonesian",
     "is": "Icelandic",
     "it": "Italian",
     "ja": "Japanese",
     "jv": "Javanese",
     "ka": "Georgian",
     "kg": "Kongo",
     "ko": "Korean",
     "ku": "Kurdish",
     "kw": "Cornish",
     "ky": "Kirghiz",
     "la": "Latin",
     "lb": "Luxembourgish Letzeburgesch",
     "li": "Limburgan Limburger Limburgish",
     "ln": "Lingala",
     "lt": "Lithuanian",
     "lv": "Latvian",
     "mg": "Malagasy",
     "mk": "Macedonian",
     "mn": "Mongolian",
     "mo": "Moldavian",
     "ms": "Malay",
     "mt": "Maltese",
     "my": "Burmese",
     "nb": "Norwegian (Bokmål)",
     "ne": "Nepali",
     "nl": "Dutch",
     "nn": "Norwegian (Nynorsk)",
     "no": "Norwegian",
     "oc": "Occitan (post 1500); Provençal",
     "pl": "Polish",
     "pt": "Portuguese",
     "rm": "Raeto-Romance",
     "ro": "Romanian",
     "ru": "Russian",
     "sc": "Sardinian",
     "se": "Northern Sami",
     "sk": "Slovak",
     "sl": "Slovenian",
     "so": "Somali",
     "sq": "Albanian",
     "sr": "Serbian",
     "sv": "Swedish",
     "sw": "Swahili",
     "tk": "Turkmen",
     "tr": "Turkish",
     "ty": "Tahitian",
     "uk": "Ukrainian",
     "ur": "Urdu",
     "uz": "Uzbek",
     "vi": "Vietnamese",
     "vo": "Volapuk",
     "yi": "Yiddish",
     "zh": "Chinese"
   }

})(jQuery);
/*jshint browser:true */
/*!
* FitVids 1.1
*
* Copyright 2013, Chris Coyier - http://css-tricks.com + Dave Rupert - http://daverupert.com
* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/
* Released under the WTFPL license - http://sam.zoy.org/wtfpl/
*
*/

(function( $ ){

  "use strict";

  $.fn.fitVids = function( options ) {
    var settings = {
      customSelector: null,
      ignore: null,
    };

    if(!document.getElementById('fit-vids-style')) {
      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js
      var head = document.head || document.getElementsByTagName('head')[0];
      var css = '.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';
      var div = document.createElement('div');
      div.innerHTML = '<p>x</p><style id="fit-vids-style">' + css + '</style>';
      head.appendChild(div.childNodes[1]);
    }

    if ( options ) {
      $.extend( settings, options );
    }

    return this.each(function(){
      var selectors = [
        "iframe[src*='player.vimeo.com']",
        "iframe[src*='youtube.com']",
        "iframe[src*='youtube-nocookie.com']",
        "iframe[src*='kickstarter.com'][src*='video.html']",
        "object",
        "embed"
      ];

      if (settings.customSelector) {
        selectors.push(settings.customSelector);
      }

      var ignoreList = '.fitvidsignore';

      if(settings.ignore) {
        ignoreList = ignoreList + ', ' + settings.ignore;
      }

      var $allVideos = $(this).find(selectors.join(','));
      $allVideos = $allVideos.not("object object"); // SwfObj conflict patch
      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.

      $allVideos.each(function(){
        var $this = $(this);
        if($this.parents(ignoreList).length > 0) {
          return; // Disable FitVids on this video.
        }
        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }
        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))
        {
          $this.attr('height', 9);
          $this.attr('width', 16);
        }
        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),
            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),
            aspectRatio = height / width;
        if(!$this.attr('id')){
          var videoID = 'fitvid' + Math.floor(Math.random()*999999);
          $this.attr('id', videoID);
        }
        $this.wrap('<div class="fluid-width-video-wrapper"></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+"%");
        $this.removeAttr('height').removeAttr('width');
      });
    });
  };
// Works with either jQuery or Zepto
})( window.jQuery || window.Zepto );

(function ($, window, document) {

  'use strict';
  $(function () {

var langfinal;    
    
$.fn.toggleClick = function(){
    var methods = arguments, // store the pa sse   d arguments fo r future reference
        count = methods.length; // cache the number  of methods 

    //use return this to maintain jQuery chainability
    return this.each(function(i, item){
        // for each element you bind to
        var index = 0; // create a local counter for that element
        $(item).click(function(){ // bind a click handler to that element
            return methods[index++ % count].apply(this,arguments); // that whe n  called will apply the 'index'th method to that element
            // the index % count means that we constrain our i terator between 0 and  ( coun t-1)
        });
    });
};

/* - - - - - - - - - - - - - - - Language Stuff - - - - - - - - - - - - - */

$.browserLanguage(function( language , acceptHeader ){
      if(language=='Portuguese'){
        badoink('pt');
      }else{

      }
    });

function badoink(l){
  if(l=='pt'){
    $('body').load("../pt.html .header, .footer, .main, #language", function(){
      $("#vidholder").fitVids();
      dacliques();
    });
  }else{
    $('body').load("../en.html .header, .footer, .main, #language", function(){
      $("#vidholder").fitVids();
      dacliques();
    });
  }
}


/* --------------------------- ALL VARS ---------------------------*/


var lingua="en";

var chwindow = $(window);
var chnew = $('#new');
var chheader = $('.header');

 var crtnn = 0;

var stagey = chwindow.height();
var stagex = chwindow.width();

var magi = '';

var is_retina = $('.myowncheck').css('font-family');
var is_mobile;
var is_ortn;
var whr=0;



if((navigator.userAgent.toLowerCase().indexOf('android')>=0)==true || (navigator.userAgent.toLowerCase().indexOf('apple-i')>=0)==true || (navigator.userAgent.toLowerCase().indexOf('windows phone')>=0)==true || (navigator.userAgent.toLowerCase().indexOf('mobile')>=0)==true || (navigator.userAgent.toLowerCase().indexOf('tablet')>=0)==true){
  
  if((navigator.userAgent.toLowerCase().indexOf('ouya')>=0)==true){
    is_mobile="nao";
  }else{
    is_mobile = "sim";
    $('.main, .footer, .header').addClass('movel');
  }

  
}else{
  is_mobile = "nao";
}

if(stagex <= stagey){
  is_ortn = 'portrait';
}else{
  is_ortn = 'landscape';
}





/* ---------------- RESIZE STUFF ------------------- */

function responso(a,b,c){

  if(b=="nada"){
    a.css('background-image', 'none');
  }else{

      if(b !== magi || c==1){



  if (stagex<485)
  {
    if(is_ortn=='portrait'){
      a.css('background-image', 'url(/surfari/assets/img/'+b+'-medium.jpg)');
    }else{
      a.css('background-image', 'url(/surfari/assets/img/'+b+'-smallest.jpg)');
    }
  
  }
else if (stagex>485 && stagex<760)
  {
  a.css('background-image', 'url(/surfari/assets/img/'+b+'-small.jpg)');
  }
else if (stagex>760 && stagex<1100)
  {
  a.css('background-image', 'url(/surfari/assets/img/'+b+'-medium.jpg)');
  }
else if (stagex>1100 && stagex<1550)
  {
  a.css('background-image', 'url(/surfari/assets/img/'+b+'-big.jpg)');
  }
else if (stagex>1550)
  {
  a.css('background-image', 'url(/surfari/assets/img/'+b+'-HD.jpg)');
  }
  if(b !== 'Nossa-Foto-Site' && b !== 'nada'){
    magi=b;
  }

}

  }



}



/* - INIT SIZE - */

$("#vidholder").fitVids();

function resizetodo(){

stagey = chwindow.height();
stagex = chwindow.width();

if(stagex <= stagey){
  is_ortn = 'portrait';
}else{
  is_ortn = 'landscape';
}


}

resizetodo();


/* - ACTUAL RESIZE - */

$( window ).resize(function() {

resizetodo();

});

function dacliques(){

/* - - - LINKS - - - */


$('.linksbt').click(function(event) {
  var ulnk = $(this).attr('cadenas');

    window.open(ulnk, "_newtab");
});

/* - - - -  FORM STUFF - - - - - */

$('#btsign').click(function(event) {

  validateForm();
});

function validateForm()
{
var x = document.getElementById("emailsignup").value;
var atpos=x.indexOf("@");
var dotpos=x.lastIndexOf(".");
if (atpos<1 || dotpos<atpos+2 || dotpos+2>=x.length)
  {
  alert("E-mail!?");
  }else{
    sendit();
  }
}

function sendit(){
    $('#ajax-form, #btsign').fadeOut(50, function(){
      $('#thanku').fadeIn(250);
    });

      $.ajax({
          dataType: 'jsonp',
          url: "http://getsimpleform.com/messages/ajax?form_api_token=a25a5e342ee963ed6b1f60f4eea8bf69",
          data: $('#ajax-form').serialize()
        }).done(function() {
          //callback which can be used to show a thank you message
          //and reset the form
          
      });
}

/* - - - - - - - - Change Text - - - - - - - - */

var chmadmenbt = $('li#madmenbt.dabts');

$('.dabts').click(function(event) {

  var boda = $(this);

  $( ".activia" ).animate({
    opacity: 0
  }, 250, function() {
    $(this).toggleClass('escondido activia');
    $('#lim9bt, #madmenbt, #faqbt').removeClass('activelink');
    $('#lim9title, #madmentitle, #faqtitle').addClass('escondido');
    if(boda[0].id=='madmenbt'){
      $('#madmentext').toggleClass('escondido').animate({opacity: 1}, 250).addClass('activia');
      $('#madmenbt').addClass('activelink');
      $('#madmentitle').toggleClass('escondido').animate({opacity: 1}, 0);
    }else if(boda[0].id=='lim9bt'){
      $('#lim9text').toggleClass('escondido').animate({opacity: 1}, 250).addClass('activia');
      $('#lim9bt').addClass('activelink');
      $('#lim9title').toggleClass('escondido').animate({opacity: 1}, 0);
    }else if(boda[0].id=='faqbt'){
      $('#faqtext').toggleClass('escondido').animate({opacity: 1}, 250).addClass('activia');
      $('#faqbt').addClass('activelink');
      $('#faqtitle').toggleClass('escondido').animate({opacity: 1}, 0);
    }

  });





  /*$('.activia').fadeOut(250, function(){
    $(this).removeClass('activia');
    $('#lim9bt, #madmenbt, #faqbt').removeClass('activelink');
    $('#lim9title, #madmentitle, #faqtitle').fadeOut(0);
    if(boda[0].id=='madmenbt'){
      $('#madmentext').fadeIn(250).addClass('activia');
      $('#madmenbt').addClass('activelink');
      $('#madmentitle').fadeIn(0);
    }else if(boda[0].id=='lim9bt'){
      $('#lim9text').fadeIn(250).addClass('activia');
      $('#lim9bt').addClass('activelink');
      $('#lim9title').fadeIn(0);
    }else if(boda[0].id=='faqbt'){
      $('#faqtext').fadeIn(250).addClass('activia');
      $('#faqbt').addClass('activelink');
      $('#faqtitle').fadeIn(0);
    }




  })*/
});

$('#language a').click(function(event) {
  event.preventDefault();
  var chklng = $(this).attr("href");
  if(chklng=='pt.html'){
    badoink('pt');
  }else{
    badoink('en');
  }
});


}   


dacliques();
/* - - - - - - - - - - - - - - - MOBILE STUFF - - - - - - - - - - - */



/* - - - - - - - - - - - - - - - - EXTRAS - - - - - - - - - - - -  - - - - - - - - - */



/*console.log("retina is "+is_retina);
console.log("mobile is "+is_mobile);
console.log("orientation is "+is_ortn);*/







    });

})(jQuery, window, document);
